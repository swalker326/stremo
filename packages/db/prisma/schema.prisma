datasource db {
  provider     = "postgresql"
  relationMode = "prisma"
  url          = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  refresh_token_expires_in Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  roomId        String?
  Room          Room?     @relation(fields: [roomId], references: [id])
  Messages      Message[]
  roles         Role[]
  roleId        String?

  @@index([roomId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Role {
  id          String @id @default(cuid())
  name        String @unique
  description String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

model Room {
  id       String    @id @default(uuid())
  name     String
  users    User[]
  messages Message[]
}

model Message {
  id      Int    @id @default(autoincrement())
  message String
  room    Room   @relation(fields: [roomId], references: [id])
  roomId  String
  user    User   @relation(fields: [userId], references: [id])
  userId  String

  @@index([roomId])
  @@index([userId])
}
